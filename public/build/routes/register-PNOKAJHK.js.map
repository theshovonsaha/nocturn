{
  "version": 3,
  "sources": ["../../../app/routes/register.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/register.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/register.tsx\");\n  import.meta.hot.lastModified = \"1732688333880.9065\";\n}\n// REMIX HMR END\n\n// app/routes/register.tsx\n\nimport { json } from \"@remix-run/cloudflare\";\nimport { Form, Link, useActionData, useNavigation } from \"@remix-run/react\";\nimport { requireGuest, createUserSession } from \"~/services/auth.server\";\nexport async function loader({\n  request\n}) {\n  await requireGuest(request);\n  return null;\n}\nexport async function action({\n  request\n}) {\n  const form = await request.formData();\n  const email = form.get(\"email\");\n  const password = form.get(\"password\");\n  const confirmPassword = form.get(\"confirmPassword\");\n  const firstName = form.get(\"firstName\");\n  const lastName = form.get(\"lastName\");\n  if (typeof email !== \"string\" || typeof password !== \"string\" || typeof confirmPassword !== \"string\") {\n    return json({\n      error: \"Invalid form submission\"\n    }, {\n      status: 400\n    });\n  }\n  const errors = {};\n  if (!email.includes(\"@\")) {\n    errors.email = \"Invalid email address\";\n  }\n  if (password.length < 8) {\n    errors.password = \"Password must be at least 8 characters\";\n  }\n  if (password !== confirmPassword) {\n    errors.confirmPassword = \"Passwords don't match\";\n  }\n  if (Object.keys(errors).length > 0) {\n    return json({\n      errors,\n      fields: {\n        email,\n        firstName: firstName?.toString(),\n        lastName: lastName?.toString()\n      }\n    }, {\n      status: 400\n    });\n  }\n  try {\n    // Replace with your actual registration logic\n    const user = {\n      id: \"new-user\",\n      email\n    };\n    return createUserSession({\n      request,\n      userId: user.id,\n      redirectTo: \"/\"\n    });\n  } catch (error) {\n    return json({\n      error: \"An error occurred during registration\"\n    }, {\n      status: 500\n    });\n  }\n}\nexport default function Register() {\n  _s();\n  const actionData = useActionData() || {};\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  return <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Create your account\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Or{\" \"}\n            <Link to=\"/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n              sign in to your existing account\n            </Link>\n          </p>\n        </div>\n\n        <Form method=\"post\" className=\"mt-8 space-y-6\">\n          {actionData?.error && <div className=\"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded\">\n              {actionData.error}\n            </div>}\n\n          <div className=\"rounded-md shadow-sm space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-gray-700\">\n                  First name\n                </label>\n                <input type=\"text\" name=\"firstName\" id=\"firstName\" defaultValue={actionData?.fields?.firstName} className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" />\n              </div>\n              <div>\n                <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-gray-700\">\n                  Last name\n                </label>\n                <input type=\"text\" name=\"lastName\" id=\"lastName\" defaultValue={actionData?.fields?.lastName} className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" />\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email address\n              </label>\n              <input type=\"email\" name=\"email\" id=\"email\" autoComplete=\"email\" required defaultValue={actionData?.fields?.email} className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" aria-invalid={actionData?.errors?.email ? true : undefined} aria-errormessage={actionData?.errors?.email ? \"email-error\" : undefined} />\n              {actionData?.errors?.email && <div className=\"text-red-500 text-sm mt-1\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>}\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Password\n              </label>\n              <input type=\"password\" name=\"password\" id=\"password\" required className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" aria-invalid={actionData?.errors?.password ? true : undefined} aria-errormessage={actionData?.errors?.password ? \"password-error\" : undefined} />\n              {actionData?.errors?.password && <div className=\"text-red-500 text-sm mt-1\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>}\n            </div>\n\n            <div>\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\n                Confirm password\n              </label>\n              <input type=\"password\" name=\"confirmPassword\" id=\"confirmPassword\" required className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" aria-invalid={actionData?.errors?.confirmPassword ? true : undefined} aria-errormessage={actionData?.errors?.confirmPassword ? \"confirm-password-error\" : undefined} />\n              {actionData?.errors?.confirmPassword && <div className=\"text-red-500 text-sm mt-1\" id=\"confirm-password-error\">\n                  {actionData.errors.confirmPassword}\n                </div>}\n            </div>\n          </div>\n\n          <div>\n            <button type=\"submit\" disabled={isSubmitting} className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n              {isSubmitting ? \"Creating account...\" : \"Create account\"}\n            </button>\n          </div>\n        </Form>\n      </div>\n    </div>;\n}\n_s(Register, \"HmUqPUj/U6cBolLs0OKg42NoyQQ=\", false, function () {\n  return [useActionData, useNavigation];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
