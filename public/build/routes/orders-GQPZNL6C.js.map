{
  "version": 3,
  "sources": ["empty-module:~/services/orders.server", "../../../app/routes/orders.tsx", "../../../app/utils/dates.ts"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/orders.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/orders.tsx\");\n  import.meta.hot.lastModified = \"1732688215335.339\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/cloudflare\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport { requireUser } from \"~/services/auth.server\";\nimport { getUserOrders } from \"~/services/orders.server\";\nimport { formatDate } from \"~/utils/dates\";\nexport async function loader({\n  request\n}) {\n  const user = await requireUser(request);\n  const orders = await getUserOrders(user.id);\n  return json({\n    orders\n  });\n}\nexport default function Orders() {\n  _s();\n  const {\n    orders\n  } = useLoaderData();\n  return <div className=\"space-y-8\">\n      <div>\n        <h1 className=\"text-2xl font-bold text-gray-900\">Order History</h1>\n        <p className=\"mt-2 text-sm text-gray-700\">\n          Check the status of recent orders and view order details\n        </p>\n      </div>\n\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n        <ul className=\"divide-y divide-gray-200\">\n          {orders.map(order => <li key={order.id}>\n              <Link to={`/orders/${order.id}`} className=\"block hover:bg-gray-50\">\n                <div className=\"px-4 py-4 sm:px-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex flex-col\">\n                      <p className=\"text-sm font-medium text-indigo-600 truncate\">\n                        Order #{order.id}\n                      </p>\n                      <p className=\"mt-1 text-sm text-gray-500\">\n                        Placed on {formatDate(order.date)}\n                      </p>\n                    </div>\n                    <div className=\"flex flex-col items-end\">\n                      <p className=\"text-sm font-medium text-gray-900\">\n                        ${order.total.toFixed(2)}\n                      </p>\n                      <span className={`mt-1 px-2.5 py-0.5 rounded-full text-xs font-medium ${order.status === 'delivered' ? 'bg-green-100 text-green-800' : order.status === 'shipped' ? 'bg-blue-100 text-blue-800' : order.status === 'processing' ? 'bg-yellow-100 text-yellow-800' : 'bg-gray-100 text-gray-800'}`}>\n                        {order.status.charAt(0).toUpperCase() + order.status.slice(1)}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </Link>\n            </li>)}\n        </ul>\n      </div>\n    </div>;\n}\n_s(Orders, \"REZ/uewjGaXhSxuZZAJ5w5to6lI=\", false, function () {\n  return [useLoaderData];\n});\n_c = Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/utils/dates.ts\"\n);\nimport.meta.hot.lastModified = \"1732688173230.3025\";\n}\n// REMIX HMR END\n\nexport function formatDate(dateString: string): string {\n  return new Date(dateString).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n} "],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACqBlB,wBAAqB;AAErB,kBAA4B;AAC5B,oBAA8B;;;ACtB9B,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;AAGO,SAAS,WAAW,YAA4B;AACrD,SAAO,IAAI,KAAK,UAAU,EAAE,mBAAmB,SAAS;AAAA,IACtD,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,EACP,CAAC;AACH;;;ADyBQ;AAzCR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,4BAA8B,EAAE;AAAA,EACzE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAuB;AACvB,cAAY,IAAI,eAAe;AACjC;AAiBe,SAAR,SAA0B;AAC/B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,SAAI,WAAU,aAClB;AAAA,uDAAC,SACC;AAAA,yDAAC,QAAG,WAAU,oCAAmC,6BAAjD;AAAA;AAAA;AAAA;AAAA,aAA8D;AAAA,MAC9D,mDAAC,OAAE,WAAU,8BAA6B,wEAA1C;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IAEA,mDAAC,SAAI,WAAU,iDACb,6DAAC,QAAG,WAAU,4BACX,iBAAO,IAAI,WAAS,mDAAC,QAClB,6DAAC,QAAK,IAAI,WAAW,MAAM,MAAM,WAAU,0BACzC,6DAAC,SAAI,WAAU,qBACb,6DAAC,SAAI,WAAU,qCACb;AAAA,yDAAC,SAAI,WAAU,iBACb;AAAA,2DAAC,OAAE,WAAU,gDAA+C;AAAA;AAAA,UAClD,MAAM;AAAA,aADhB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,OAAE,WAAU,8BAA6B;AAAA;AAAA,UAC7B,WAAW,MAAM,IAAI;AAAA,aADlC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WANF;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,MACA,mDAAC,SAAI,WAAU,2BACb;AAAA,2DAAC,OAAE,WAAU,qCAAoC;AAAA;AAAA,UAC7C,MAAM,MAAM,QAAQ,CAAC;AAAA,aADzB;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,UAAK,WAAW,uDAAuD,MAAM,WAAW,cAAc,gCAAgC,MAAM,WAAW,YAAY,8BAA8B,MAAM,WAAW,eAAe,kCAAkC,+BACjQ,gBAAM,OAAO,OAAO,CAAC,EAAE,YAAY,IAAI,MAAM,OAAO,MAAM,CAAC,KAD9D;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WANF;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,SAhBF;AAAA;AAAA;AAAA;AAAA,WAiBA,KAlBF;AAAA;AAAA;AAAA;AAAA,WAmBA,KApBF;AAAA;AAAA;AAAA;AAAA,WAqBA,KAtB0B,MAAM,IAAf;AAAA;AAAA;AAAA;AAAA,WAuBnB,CAAK,KAxBT;AAAA;AAAA;AAAA;AAAA,WAyBA,KA1BF;AAAA;AAAA;AAAA;AAAA,WA2BA;AAAA,OAnCG;AAAA;AAAA;AAAA;AAAA,SAoCL;AACJ;AACA,GAAG,QAAQ,gCAAgC,OAAO,WAAY;AAC5D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,QAAQ;AAEzB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
